-- 1 Escreva uma consulta SQL que retorne todos os empregados (funcionários).
USE PSDB;
-- // SELECT * FROM tabla;                      

SELECIONE  *  DE funcionários;                      

--   2------------------------------------------
--   Escreva uma consulta SQL que mostre apenas os campos número (emp_no) e nome (first_name) de
-- todos os empregados
-- // SELECIONA C, C DE T;

SELECT emp_no, first_name FROM empregados;

-- 3------------------------------------------
--   Consultando a tabela empregados (funcionários), selecione os nomes (first_name) distintos.
-- //SELECIONE C DISTINTO DE T;

SELECT DISTINCT first_name FROM empregados;

-- 4 ------------------------------------------
--   Consultando a tabela empregados (funcionários), selecione os nomes (first_name) distintos. Ordene pelo
-- campo nome (first_name).
-- // SELECIONA C DISTINTO DE T ORDER BY C;


SELECT DISTINCT first_name FROM empregados
ORDER BY primeiro_nome;


--   5------------------------------------------
--   Consultando a tabela empregados (funcionários), selecione os nomes (first_name) distintos. Ordene pelo
-- campo nome (first_name) de forma descendente.
-- //SELECT DISTINCT C FROM T ORDER BY C DESC;

SELECT DISTINCT first_name FROM empregados
ORDER BY primeiro_nome DESC ;

-- 6 ------------------------------------------
--   Consultando a tabela empregados (funcionários), selecione os nomes (first_name) distintos. Ordene pelo
-- campo first_name de forma ascendente.
-- //SELECT distinto C FROM T ORDER BY CA ASC;

SELECIONE o primeiro_nome distinto de funcionários
ORDER BY primeiro_nome ASC ;

--   7------------------------------------------
--   Escreva uma consulta SQL que retorne combinações distintas de nomes (first_name) e sobrenomes
-- (last_name) da tabela empregados (emploees).
-- // SELECIONA C DISTINTO, C DE T;

SELECT DISTINCT first_name, last_name FROM empregados;

--   8------------------------------------------
--   Escreva uma consulta SQL que retorne combinações distintas de nomes (first_name) e sobrenomes
-- (last_name) da tabela empregados (emploees). Ordene o resultado por first_name e last_name.
-- // SELECT DISTINCT C, C FROM T order by C, C;


SELECT DISTINCT first_name, last_name FROM empregados
ordene por first_name, last_name;

--   9------------------------------------------
-- Escreva uma consulta SQL que retorne combinações distintas de nomes (first_name) e sobrenomes
-- (last_name) da tabela empregados (emploees). Ordene o resultado por first_name e last_name de forma
-- descendente.
-- // SELECT DISTINCT C, C FROM T order by C desc, C desc;


SELECT DISTINCT first_name, last_name FROM empregados
ordene por first_name desc , last_name desc ;

--   10------------------------------------------
--   Escreva uma consulta SQL que retorne combinações distintas de nomes (first_name) e sobrenomes
-- (last_name) da tabela empregados (emploees). Ordene o resultado por first_name e last_name de forma
-- aumentos.
-- //SELECT DISTINCT C, C FROM T order by C ASC,C ASC;

SELECT DISTINCT first_name, last_name FROM empregados
ordene por primeiro_nome ASC , sobrenome ASC ;

--   11------------------------------------------
--   Escreva uma consulta SQL que retorne todos os empregados (funcionários). Limite em 100 ou número de
-- registros retornados
-- //SELECT * FROM T LIMIT 100;


SELECT  *  FROM empregados LIMIT  100 ;


--   12------------------------------------------
--   Escreva uma consulta SQL que retorne todos os empregados (funcionários). Limite em 100 ou número de
-- registros retornados e ordenados pelo campo número (emp_no).
-- // SELECT * FROM T ORDER BY C LIMIT 100;

SELECT  *  FROM empregados   ORDER BY emp_no   LIMIT  100 ;

-- 13 ------------------------------------------
--   Escreva uma consulta SQL que retorne todos os empregados (funcionários). Limite em 100 ou número de
-- registros retornados e ordenados pelo campo número (emp_no) de forma ascendente
-- // SELECT * FROM T ORDER BY CASC LIMIT 100;

SELECT  *  FROM empregados   ORDER BY emp_no ASC   LIMIT  100 ;

--   14------------------------------------------
--   Escreva uma consulta SQL que retorne todos os empregados (funcionários). Limite em 100 ou número de
-- registros retornados e ordenados pelo campo número (emp_no) de forma descendente.
-- // SELECT * FROM T ORDER BY C DESC LIMIT 100;

SELECT  *  FROM empregados   ORDER BY emp_no DESC   LIMIT  100 ;

--   15------------------------------------------
--   Escreva uma consulta SQL que retorne todos os empregados (employees) cujo nome (first_name) seja
-- igual a 'Basil'
-- // SELECT * FROM T WHERE C = 'Basil';

SELECT  *  FROM empregados    WHERE FIRST_NAME =  ' Basílio ' ;

-- 16 ------------------------------------------
--   Escreva uma consulta SQL que retorne todos os empregados (employees) cujo nome (first_name) seja
-- igual a 'Basil' e o sexo igual a 'M'.
-- // SELECT * FROM T WHERE C = 'Basil' AND C = 'M';

SELECT  *  FROM empregados    WHERE primeiro_nome =  ' Basílio '  E gênero =  ' M ' ;

-- 17 ------------------------------------------
--   Escreva uma consulta SQL que retorne todos os empregados (employees) cujo nome (first_name) seja
-- igual a 'Basil' e o sexo (gênero) seja diferente de 'M'.
-- // SELECT * FROM T WHERE C = 'Basil' AND C <> 'M';

SELECT  *  FROM empregados   WHERE primeiro_nome =  ' Basílio '  AND gênero <>  ' M ' ;

--   18------------------------------------------
--   Escreva uma consulta SQL que retorne todos os empregados (employees) cujo nome (first_name) seja
-- igual a 'Basil', o sobrenome (last_name) igual a 'Strooper' e o sexo (gender) seja igual a 'M'.
-- // SELECT * FROM T WHERE C = 'Basil' AND C = 'M' AND C = 'Strooper';

SELECIONE  *  DE funcionários
ONDE
primeiro_nome =  ' Basílio '
E gênero =  ' M '
AND last_name =  ' Strooper ' ;

--   19------------------------------------------
--   Escreva uma consulta SQL que retorne a todos os funcionários (employees) cujo nome (first_name)
-- venceu no início a combinação de caracteres 'Crist'.
-- // SELECT * FROM T WHERE C LIKE 'Crist%' ;

SELECIONE  *  DE funcionários   ONDE
primeiro_nome LIKE  ' Crist% ' ;

--   20------------------------------------------
--   Escreva uma consulta SQL que retorne a todos os funcionários (employees) cujo nome (first_name)
-- atendeu no final os seguintes caracteres 'zette'.
-- // SELECT * FROM T WHERE C LIKE '%zette' ;

SELECIONE  *  DE funcionários
ONDE
primeiro_nome LIKE  ' %zette ' ;

--   21------------------------------------------
--   Escreva uma consulta SQL que retorne a todos os funcionários (employees) cujo nome (first_name)
-- atendeu no final a combinação de caracteres 'zette' e que o sexo (gênero) seja igual a 'M'.
-- // SELECIONE * DE T ONDE C LIKE '%zette' E C = 'M';

SELECIONE  *  DE funcionários
ONDE
FIRST_NAME LIKE  ' %zette '
E GÊNERO =  ' M ' ;

--   22------------------------------------------
--   Escreva uma consulta SQL que retorne a todos os funcionários (employees) cujo nome (first_name)
-- a combinação de caracteres 'arvi'
-- // SELECT * FROM T WHERE C LIKE '%arvi%';


SELECIONE  *  DE funcionários
ONDE
primeiro_nome LIKE  ' %arvi% ' ;

-- 23 ------------------------------------------
--   Escreva uma consulta SQL que retorne a todos os funcionários (employees) cujo nome (first_name)
-- a combinação de caracteres 'arvi' eo sexo (gênero) seja igual a 'M'.
-- // SELECT * FROM T WHERE C LIKE '%arvi%' AND C = 'M';

SELECIONE  *  DE funcionários
ONDE
primeiro_nome LIKE  ' %arvi% '
E gênero =  ' M ' ;

--   24------------------------------------------
--   Escreva uma consulta SQL que retorne todos os empregados (employees) cujo nome (first_name) seja
-- igual a 'Yinghua' ou igual a 'Elvis'.
-- // SELECT * FROM T WHERE (C = 'Yinghua' OR C = 'Elvis');

SELECIONE  *
DE funcionários
ONDE
(primeiro_nome =  ' Yinghua '  OU
first_name =  ' Elvis ' );

--   25------------------------------------------
--   Escreva uma consulta SQL que retorne todos os empregados (employees) cujo nome (first_name) seja
-- igual a 'Yinghua' ou igual a 'Elvis' e o sexo (gênero) seja igual a 'M'.
-- // SELECT * FROM T WHERE (C = 'Yinghua' OR C = 'Elvis') AND C= 'M';

SELECIONE  *
DE funcionários
ONDE
(first_name =  ' Yinghua '  OU   first_name =  ' Elvis ' )
E gênero =  ' M ' ;

--   26------------------------------------------
--   Escreva uma consulta SQL que retorne da tabela empregados (funcionários) o empregado cujo número
-- (emp_no) seja igual a 14037.
-- // SELECIONA * FROM T WHERE C = 14037;

SELECT  *  FROM empregados WHERE emp_no =  14037 ;


--   27------------------------------------------
-- 27. Escreva uma consulta SQL que exiba o nome (first_name) e sobrenome (last_name) da tabela empregados
-- (funcionários) cujo número (emp_no) seja igual a 14037.
-- // SELECIONE C, C DE T ONDE C = 14037;

SELECT first_name, last_name FROM empregados WHERE emp_no =  14037 ;

-- 28 ------------------------------------------
--   Escreva uma consulta SQL que retorne os empregados (funcionários) cujo número (emp_no) seja (IN)
-- 15037 ou 14039 ou 16039
-- // SELECT * FROM T WHERE C IN (15037,14039,16039);

SELECT  *  FROM empregados WHERE emp_no IN ( 15037 , 14039 , 16039 );

--   29------------------------------------------
--   Escreva uma consulta SQL que retorne os empregados (funcionários) cujo número (emp_no) está entre
-- (ENTRE) 14037 e 14047.
-- //SELECIONE * DE T ONDE C ENTRE 14037 E 14047;

SELECT  *  FROM empregados WHERE emp_no BETWEEN 14037  AND  14047 ;

--   30------------------------------------------
--   Escreva uma consulta SQL que retorne os empregados (funcionários) cujo número (emp_no) seja maior ou
-- igual a 14037 e menor ou igual a 14047.
-- // SELECIONE * DE T ONDE C >= 14037 E C <= 14047;


SELECT  *  FROM empregados WHERE emp_no >=  14037  AND emp_no <=  14047 ;

--   31------------------------------------------
--   Selecione os empregados (funcionários) cujo nome (first_name) é seguido no início a combinação de
-- caracteres 'Cristo' e cujo número (emp_no) seja maior que 485733.
-- // SELECT * FROM T WHERE C LIKE 'Crist%' AND C > 485733;


SELECT  *  FROM Employees   WHERE first_name LIKE  ' Crist% '  AND emp_no >  485733 ;

--   32------------------------------------------
--   Selecione os empregados (funcionários) cujo nome (first_name) é seguido no início a combinação de
-- caracteres 'Cristo' e cujo número (emp_no) seja maior ou igual que 485733
-- // SELECT * FROM T WHERE C LIKE 'Crist%' AND C >= 485733;

SELECT  *  FROM Employees   WHERE first_name LIKE  ' Crist% '  AND emp_no >=  485733 ;

-- 33 ------------------------------------------
--   Selecione os empregados (funcionários) cujo nome (first_name) identificou a combinação de caracteres 'Cristo'
-- e cujo número (emp_no) seja menor que 37126.
-- // SELECT * FROM T WHERE C LIKE '%Crist%' AND C < 37126;

SELECT  *  FROM empregados   WHERE first_name LIKE  ' %Crist% '  AND emp_no <  37126 ;

-- 34 ------------------------------------------
--   Selecione os empregados (funcionários) cujo nome (first_name) identificou a combinação de caracteres 'Cristo'
-- e cujo número (emp_no) seja menor ou igual que 37126
-- // SELECT * FROM T WHERE C LIKE '%Crist%' AND C <= 37126;

SELECT  *  FROM empregados   WHERE first_name LIKE  ' %Crist% '  AND emp_no <=  37126 ;

--   35------------------------------------------
--   Escreva uma consulta SQL que retorne a todos os empregados (funcionários) cujo número esteja entre (IN)
-- 494831 ou 479832 ou 599833 ou 499832 e sexo (gênero) entre 'M' e 'F'.
-- // SELECIONE * DE T ONDE C IN (494831,479832,599833,499832) E C IN ('M','F');

SELECT  *  FROM empregados   WHERE emp_no IN ( 494831 , 479832 , 599833 , 499832 ) AND gender IN ( ' M ' , ' F ' );

--   36------------------------------------------
--   Escreva uma consulta SQL que retorne a todos os empregados (funcionários) cujo número esteja entre (IN)
-- 494831 ou 479832 ou 599833 ou 499832 e sexo (gênero) entre 'M' e 'F'. Limite o resultado em 10 registros.
-- // SELECIONE * DE T ONDE C IN (494831,479832,599833,499832) E C IN ('M','F') LIMITE 10;

SELECT  *  FROM empregados   WHERE   emp_no IN ( 494831 , 479832 , 599833 , 499832 ) AND gender IN ( ' M ' , ' F ' ) LIMIT  10 ;

-- 37 ------------------------------------------
-- Escreva uma consulta SQL que retorne a todos os empregados (funcionários) cujo número esteja entre (IN)
-- 494831 ou 479832 ou 599833 ou 499832 e sexo (gênero) entre 'M' e 'F'. Coloque o apelido (ALIASES)
-- na tabela empregados (employees) de 'emp' e referencie este nome nos campos da clausula WHERE em
-- conjunto com o nome do campo para realizar o filtro (emp.emp_no)
-- // SELECT * FROM T t WHERE tC IN (494831,479832,599833,499832) AND tC IN ('M','F');

SELECT  *  FROM empregados emp    WHERE   emp . emp_no  IN ( 494831 , 479832 , 599833 , 499832 ) E  emp . gênero  IN ( ' M ' , ' F ' );

--   38------------------------------------------
--   Escreva uma consulta SQL que retorne a todos os empregados (funcionários) cujo número esteja entre (IN)
-- 494831 ou 479832 ou 599833 ou 499832 e sexo (gênero) entre 'M' e 'F'. Coloque o apelido
-- (ALIASES) na tabela empregados (employees) de 'emp' e referencia este nome nos campos da clausula
-- WHERE em conjunto com o nome do campo para realizar o filtro (emp.emp_no). Exiba apenas os
-- campos número (emp_no) e nome (first_name), para estes de o apelido (ALIASES) de 'Numero' para o
-- campo emp_no e de 'Nome' para o campo first_name.
-- // SELECT tC 'Numero', tC 'Nome' FROM T t WHERE tC IN (494831,479832,599833,499832) AND tC IN ('M','F');


SELECIONE  emp . emp_no  ' Número ' , emp . first_name  ' Nome '  FROM empregados emp    WHERE   emp . emp_no  IN ( 494831 , 479832 , 599833 , 499832 ) E  emp . gênero  IN ( ' M ' , ' F ' );


 --   39------------------------------------------
-- Usando uma base de dados WORLD, resolva os seguintes exercícios.
-- Selecione todos os países nos quais se fala a língua 'Dutch'
-- // SELECT country.* FROM country INNER JOIN countrylanguage ON countrylanguage.CountryCode = country.Code WHERE countrylanguage.Language = 'Holandês';

mundo USE;

SELECIONE o país. *  DO país
INNER JOIN idioma do país
ON  idioma do país . PaísCódigo  =  país . Código
WHERE  paísidioma . Idioma  =  ' Holandês ' ;

--   40------------------------------------------
-- Selecione todas as cidades dos países no qual se fala a língua 'Dutch'.
#Resposta 1
SELECIONE a cidade. *  DO país

INNER JOIN idioma do país
ON  idioma do país . PaísCódigo  =  país . Código

cidade de INNER JOIN
NA  cidade . PaísCódigo  =  país . Código

WHERE  paísidioma . Idioma  =  ' Holandês ' ;

# Resposta 2 - Garantir planos de execução
SELECIONE a cidade. *  DA cidade

INNER JOIN idioma do país
ON  idioma do país . PaísCódigo  =  cidade . Código do país

WHERE  paísidioma . Idioma  =  ' Holandês ' ;

--   41------------------------------------------
--   Selecione todos os países cuja língua oficial seja o 'Spanish'

SELECIONE  * 

DO país

INNER JOIN idioma do país
ON  idioma do país . PaísCódigo  =  país . Código

WHERE  paísidioma . Idioma  =  ' espanhol ' 
E  idioma do país . IsOficial  =  ' T ' ;

--   42------------------------------------------
-- Selecione todos os países cuja língua oficial seja o 'Spanish' e que a porcentagem da fala do idioma entre
-- a população seja maior que 96,00.

SELECIONE  * 

DO país

INNER JOIN idioma do país
ON  idioma do país . PaísCódigo  =  país . Código

WHERE  paísidioma . Idioma  =  ' espanhol ' 
E  idioma do país . IsOfficial  =  ' T '
E  idioma do país . Porcentagem  >  96 ;

--   43------------------------------------------
-- Selecione todas as cidades cujo código de pais seja 'BRA' e a população maior que 1000.000.

SELECIONE a cidade. * 

DA cidade

país de INNER JOIN
 país ON . código  =  cidade . Código do país

ONDE  país . Código  =  ' BRA '
E  cidade . População  >  1.000.000 ;

-- 44 ------------------------------------------
-- Programe uma consulta que retorne o seguinte: da tabela pais o nome, continente, região e população.
-- Da tabela cidade o nome, o distrito e a população. Da tabela língua do país o nome do idioma. Selecione
-- apenas países que se encontram no continente 'Europa'

SELECIONE  
	país . nome , 	
    país . continente ,
    país . Região ,
    país . População ,
	cidade . nome city_name,
    cidade . distrito ,
    cidade . População ,
    idioma do país . Linguagem
    
DO país

cidade de INNER JOIN
NA  cidade . PaísCódigo  =  país . código

INNER JOIN idioma do país
ON  idioma do país . PaísCódigo  =  país . código 

ONDE  país . Continente  =  ' Europa ' ;


-- 45 ------------------------------------------
-- Programe uma consulta que retorne o seguinte: da tabela pais o nome, continente, região e população.
-- Da tabela cidade o nome, o distrito e a população. Da tabela língua do país o nome do idioma. Selecione
-- apenas os idiomas oficiais e os países que se encontram no continente 'Europa'.


SELECIONE  
	país . nome , 	
    país . continente ,
    país . Região ,
    país . População ,
	cidade . nome city_name,
    cidade . distrito ,
    cidade . População ,
    idioma do país . Linguagem
    
DO país

cidade de INNER JOIN
NA  cidade . PaísCódigo  =  país . código

INNER JOIN idioma do país
ON  idioma do país . PaísCódigo  =  país . código 

ONDE  país . Continente  =  ' Europa '
E  idioma do país . IsOficial =  ' T ' ;
